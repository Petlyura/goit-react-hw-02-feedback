{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","defaultProps","FeedbackOptions","onLeaveFeedback","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleLeaveFeedback","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeedback","Math","round","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAGMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACGD,GAAS,6BAAKA,IACdC,MAILF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,QCEAI,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,wBAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qBCSWI,EAjBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCAWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,8BAAMA,KCIvBC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,oBAAsB,YAA2B,IAAdZ,EAAa,EAAvBa,OAAUb,KACjC,EAAKc,UAAS,SAACC,GAAD,sBAAmBf,EAAOe,EAAUf,GAAQ,O,EAG5DgB,mBAAqB,WAKnB,OAJcC,OAAOC,OAAO,EAAKP,OAAOQ,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,I,EAKJC,gCAAkC,WAChC,IAAMhB,EAAQ,EAAKU,qBACbO,EAAmB,EAAKZ,MAAMR,KAKpC,OAJmCG,EAC/BkB,KAAKC,MAAOF,EAAmBjB,EAAS,KACxC,G,4CAKN,WACE,MAA+BoB,KAAKf,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKV,qBAE3B,OACE,qCACE,cAAC,EAAD,CAAStB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,gBAAiB4B,KAAKd,wBAEzC,cAAC,EAAD,UACGe,EACC,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBAAoBmB,KAAKJ,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,+B,GAhDDmB,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44569631.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <section>\n    {title && <h2>{title}</h2>}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <section>\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n      Bad\n    </button>\n  </section>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <div>{message}</div>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\n\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = ({ target: { name } }) => {\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.state.good;\n    const positiveFeedbackPercentage = total\n      ? Math.round((positiveFeedback / total) * 100)\n      : 0;\n\n    return positiveFeedbackPercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleLeaveFeedback} />\n        </Section>\n        <Section>\n          {totalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}